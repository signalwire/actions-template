name: 'Terragrunt GitHub Actions'
on:

  workflow_call:
    inputs:
      TELEPORT_PROXY_URL:
        required: false
        type: string
        default: ''
        description: Default Teleport URL
      TELEPORT_APP:
        required: false
        type: string
        default: ''
        description: An app registered on teleport to authenticate using proxy
      VAULT_SECRETS:
        required: false
        type: string
        default: ''
        description: A new line list of vault secrets to be fetched
    secrets:
      TELEPORT_TOKEN:
        required: false
        description: Teleport Token name
      VAULT_TOKEN:
        required: false
        description: A Vault token in case vault is required

jobs:
  terragrunt:
    name: 'Test vault'
    runs-on: self-hosted
    permissions: write-all

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Checkout actions
        uses: actions/checkout@v4
        with:
          repository: signalwire/actions-template
          ref: vault-secrets
          path: actions

      - name: Authenticate against Teleport to use Vault
        if: inputs.TELEPORT_APP != ''
        id: teleportapp
        uses: ./actions/.github/actions/teleport
        env:
          TOKEN: ${{ secrets.TELEPORT_TOKEN }}
          PROXY_URL: ${{ inputs.TELEPORT_PROXY_URL }}
        with:
          TELEPORT_APP: ${{ inputs.TELEPORT_APP }}
            
      # - name: Configure Vault
      #   if: inputs.TELEPORT_APP != ''
      #   run: |
      #     echo VAULT_ADDR=https://${{ inputs.TELEPORT_PROXY_URL }} >> $GITHUB_ENV
      #     #echo VAULT_API_ADDR=https://${{ inputs.TELEPORT_PROXY_URL }} >> $GITHUB_ENV
      #     echo VAULT_CLIENT_TIMEOUT=120s >> $GITHUB_ENV
      #     cp ${{ steps.teleportapp.outputs.certificate-file }} ${{github.workspace}}/certificate-file
      #     echo VAULT_CLIENT_CERT=/github/workspace/certificate-file >> $GITHUB_ENV
      #     cp ${{ steps.teleportapp.outputs.key-file }} ${{github.workspace}}/key-file
      #     echo VAULT_CLIENT_KEY=/github/workspace/key-file >> $GITHUB_ENV
      #     echo VAULT_TOKEN=$VAULT_TOKEN >> $GITHUB_ENV
      #   env:
      #     VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
                
      - name: vault secrets 
        uses: ./actions/.github/actions/vault-secrets
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          VAULT_ADDR: ${{ inputs.TELEPORT_PROXY_URL }}
          VAULT_CA_CERT: ${{ steps.teleportapp.outputs.certificate-file }}
          VAULT_CLIENT_KEY: ${{ steps.teleportapp.outputs.key-file }}
          SECRETS: ${{ inputs.VAULT_SECRETS }}
      
      - run: printenv
