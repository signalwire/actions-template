# This is a basic workflow to help you get started with Actions

name: CI checking

# Controls when the workflow will run
on:

  workflow_call:
    inputs:
      PROJECT_NAME:
        required: true
        type: string
      LANGUAGE:
        required: true
        type: string
      NODE_VERSION:
        required: false
        default: "19"
        type: string
      COVERAGE:
        required: false
        type: boolean
        default: true
      RUBY_VERSION:
        required: false
        type: string
        description: Default Ruby version
      TEST_DEPENDENCIES:
        required: false
        type: boolean
        default: false
      TEST_DEPENDENCIES_PRIVATE:
        required: false
        type: boolean
        default: false
      DEPENDENCIES_FILE:
        required: false
        type: string
        default: ./provisioning/docker-compose.yml
      DOTNET_VERSION:
        required: false
        type: string
        default: "6.0.403"
      SUBMODULES_RECURSIVE:
        required: false
        type: boolean
        default: false
      RUNNER:
        type: string
        default: 'ubuntu-latest'
        description: 'The default runner.'
      ENVIRONMENT: 
        type: string
        description: 'The environment related to an WF execution'
      ENV_PATH: 
        type: string
        description: 'The .env file for CI.'
      TEST_CREATE_NETWORK: 
        type: boolean
        description: 'Whenever you want to create a docker network for test dependencies.'
      RUBY_RAKE_COMMANDS:
        type: string
        description: A comma-separated list of rake commands.
      ZEITWERK:
        type: boolean
        description: Zeitwerk run.
        default: true
      BRAKEMAN:
        type: boolean
        default: true
        description: Brakeman run.
      RUBOCOP:
        type: boolean
        description: Rubocop run.
        default: true
      RUN_TESTS:
        type: boolean
        description: Whenever you wanna run tests.
        default: true
      DOTNET_INSTALL_DIR:
        type: string
        required: false
        default: '/usr/share/dotnet'
        description: Set a custom .NET install dir
    secrets:
      SONAR_HOST_URL:
        required: false
      SONAR_TOKEN: 
        required: false
      SONAR_PROJECT_KEY:
        required: false
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false
      GH_BOT_DEPLOY_KEY:
        required: false
      CONTRIBSYS_CREDENTIALS:
        required: false
        description: Contribsys credentials used for ruby gems

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.RUNNER }}
    name: CI_CHECK
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/checkout@v3
      if: ${{ inputs.SUBMODULES_RECURSIVE  == true }}
      name: Checkout submodules
      with:
        ssh-key: ${{ secrets.GH_BOT_DEPLOY_KEY }}
        submodules: 'recursive'

    - name: Checkout actions
      uses: actions/checkout@v3
      with:
        repository: signalwire/actions-template
        ref: main
        path: actions

    - name: Up Test dependencies
      if: ${{ inputs.TEST_DEPENDENCIES == true}}
      uses: ./actions/.github/actions/docker-compose
      with:
        COMPOSE_FILE: ${{ inputs.DEPENDENCIES_FILE }}
        DOCKERHUB_LOGIN: ${{ inputs.TEST_DEPENDENCIES_PRIVATE }}
        RUN_BACKGROUND: true
        CREATE_NETWORK: ${{ inputs.TEST_CREATE_NETWORK }}
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Test .NET
      if: ${{ inputs.LANGUAGE == 'dot-net' }}
      uses: ./actions/.github/actions/test-dotnet
      with:
        DOTNET_VERSION: ${{ inputs.DOTNET_VERSION }}
        DOTNET_INSTALL_DIR: ${{ inputs.DOTNET_INSTALL_DIR }}
        GENERATE_DEV_CERTS: ${{ inputs.GENERATE_DEV_CERTS }}
        RUN_TESTS: ${{ inputs.RUN_TESTS }}
    
    - name: Test JS
      if: ${{ inputs.LANGUAGE == 'JavaScript' }}
      uses: ./actions/.github/actions/test-javascript
      with:
        NODE_VERSION: ${{ inputs.NODE_VERSION }}
    
    - name: Test Ruby
      if: ${{ inputs.LANGUAGE == 'Ruby' }}
      uses: ./actions/.github/actions/test-ruby
      with:
        RUBY_VERSION: ${{ inputs.RUBY_VERSION }}
        ENV_PATH: ${{ inputs.ENV_PATH }}
        RUBY_RAKE_COMMANDS: ${{ inputs.RUBY_RAKE_COMMANDS }}
        ZEITWERK: ${{ inputs.ZEITWERK }}
        BRAKEMAN: ${{ inputs.BRAKEMAN }}
        RUBOCOP: ${{ inputs.RUBOCOP }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CONTRIBSYS_CREDENTIALS: ${{ secrets.CONTRIBSYS_CREDENTIALS }}
    
    - name: Test configs
      if: inputs.LANGUAGE == 'configs' || inputs.LANGUAGE == 'configs'
      uses: ./actions/.github/actions/test-configs
    
    - name: SonarQube Coverage
      if: ${{ inputs.COVERAGE == true }}
      uses: ./actions/.github/actions/sonarqube
      with:
        LANGUAGE: ${{ inputs.LANGUAGE }}
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}

